// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String   @db.VarChar(20)
  lastName  String   @db.VarChar(30)
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  roles     Role[]   @default([User])
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique @db.VarChar(20)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product[]
}

model Billboard {
  id         Int      @id @default(autoincrement())
  imageId    Int      @unique
  isFeatured Boolean  @default(true)
  createdAt  DateTime @default(now())

  image File @relation(fields: [imageId], references: [id], onDelete: Cascade)
}

model File {
  id        Int    @id @default(autoincrement())
  filename  String
  path      String
  mimetype  String
  productId Int?

  billboard Billboard?
  product   Product?   @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Product {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(120)
  price      Int
  desc       String?
  categoryId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  qty        Int

  images    File[]
  category  Category    @relation(references: [id], fields: [categoryId])
  inventory Inventory[]
}

model Inventory {
  productId Int
  size      String @db.VarChar(20)
  color     String @db.VarChar(7) // hex code

  product Product @relation(references: [id], fields: [productId], onDelete: Cascade)

  @@unique([productId, size, color])
}

enum Role {
  User
  Admin
}
