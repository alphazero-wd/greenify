// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String   @db.VarChar(20)
  lastName  String   @db.VarChar(30)
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  roles     Role[]   @default([User])
}

model Size {
  id    Int    @id @default(autoincrement())
  label String @unique @db.VarChar(20)

  variants ProductVariant[]
}

model Color {
  id      Int            @id @default(autoincrement())
  hexCode String         @unique @db.VarChar(7)
  images  ProductImage[]

  variants ProductVariant[]
}

model File {
  id       Int    @id @default(autoincrement())
  filename String
  path     String
  mimetype String

  productImage ProductImage?
}

model Category {
  id               Int    @id @default(autoincrement())
  name             String @db.VarChar(60)
  parentCategoryId Int?

  parentCategory Category?  @relation("ParentSubCategories", fields: [parentCategoryId], references: [id], onDelete: Cascade)
  subCategories  Category[] @relation("ParentSubCategories")
  products       Product[]

  @@unique([parentCategoryId, name])
}

model Product {
  id         Int    @id @default(autoincrement())
  name       String @unique @db.VarChar(120)
  price      Int
  desc       String
  highlights String
  care       String
  discount   Int    @default(0)

  categories Category[]
  images     ProductImage[]
  variants   ProductVariant[]
}

model ProductImage {
  imageId   Int  @id
  productId Int
  colorId   Int?

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  color   Color?  @relation(fields: [colorId], references: [id], onDelete: Cascade)
  image   File    @relation(fields: [imageId], references: [id], onDelete: Cascade)
}

model ProductVariant {
  id        Int    @id @default(autoincrement())
  name      String
  productId Int
  colorId   Int?
  sizeId    Int?
  qty       Int

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  color   Color?  @relation(fields: [colorId], references: [id], onDelete: Cascade)
  size    Size?   @relation(fields: [sizeId], references: [id], onDelete: Cascade)

  @@unique([name, productId, colorId, sizeId])
}

enum Role {
  User
  Admin
}
