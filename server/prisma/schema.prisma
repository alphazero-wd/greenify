// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String   @db.VarChar(20)
  lastName  String   @db.VarChar(30)
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  roles     Role[]   @default([User])
}

model Size {
  id    Int    @id @default(autoincrement())
  label String @unique @db.VarChar(20)

  variants Variant[]
}

model Color {
  id      Int    @id @default(autoincrement())
  name    String @unique @db.VarChar(20)
  hexCode String @unique @db.VarChar(7)

  variants Variant[]
}

model File {
  id       Int    @id @default(autoincrement())
  filename String
  path     String
  mimetype String

  variants Variant[]
}

model Category {
  id               Int    @id @default(autoincrement())
  name             String @db.VarChar(60)
  parentCategoryId Int?

  parentCategory Category?  @relation("ParentSubCategories", fields: [parentCategoryId], references: [id], onDelete: Cascade)
  subCategories  Category[] @relation("ParentSubCategories")
  products       Product[]

  @@unique([parentCategoryId, name])
}

model Product {
  id        Int     @id @default(autoincrement())
  name      String  @unique @db.VarChar(120)
  desc      String
  sizeChart String?
  status    Status  @default(Active)

  categories Category[]
  variants   Variant[]
}

model Variant {
  id        Int     @id @default(autoincrement())
  price     Int     @default(0)
  productId Int
  colorId   Int?
  sizeId    Int?
  sku       String?
  inStock   Int     @default(0)

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  color   Color?  @relation(fields: [colorId], references: [id], onDelete: Cascade)
  size    Size?   @relation(fields: [sizeId], references: [id], onDelete: Cascade)
  images  File[]

  @@unique([productId, colorId, sizeId])
}

enum Role {
  User
  Admin
}

enum Status {
  Active
  Draft
}
